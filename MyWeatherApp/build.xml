<?xml version="1.0" encoding="UTF-8" standalone="no"?><!-- WARNING: Eclipse auto-generated file.              Any modifications will be overwritten.              To include a user specific buildfile here, simply create one in the same              directory with the processing instruction <?eclipse.ant.import?>              as the first entry and export the buildfile again. --><project basedir="." default="build" name="MyWeatherApp">    <property environment="env"/>    <property name="ECLIPSE_HOME" value="../../../Downloads/Softwares/eclipse-jee-2024-12-R-win32-x86_64/eclipse/"/>    <property name="debuglevel" value="source,lines,vars"/>    <property name="target" value="21"/>    <property name="source" value="21"/>        <!-- Server runtime path, classpaths, etc. -->    <path id="Server Runtime [apache-tomcat-10.1.28].libraryclasspath">        <!-- your tomcat libs here -->    </path>    <path id="Web App Libraries.libraryclasspath">        <pathelement location="src/main/webapp/WEB-INF/lib/gson-2.8.5.jar"/>    </path>    <path id="MyWeatherApp.classpath">        <pathelement location="build/classes"/>        <path refid="Server Runtime [apache-tomcat-10.1.28].libraryclasspath"/>        <path refid="Web App Libraries.libraryclasspath"/>    </path>    <!-- Targets for init, clean, build -->    <target name="init">        <mkdir dir="build/classes"/>        <copy includeemptydirs="false" todir="build/classes">            <fileset dir="src/main/java">                <exclude name="**/*.launch"/>                <exclude name="**/*.java"/>            </fileset>        </copy>    </target>    <target name="clean">        <delete dir="build/classes"/>    </target>    <target depends="clean" name="cleanall"/>    <target depends="build-subprojects,build-project" name="build"/>    <target name="build-subprojects"/>    <target depends="init" name="build-project">        <echo message="${ant.project.name}: ${ant.file}"/>        <javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" includeantruntime="false" source="${source}" target="${target}">            <src path="src/main/java"/>            <classpath refid="MyWeatherApp.classpath"/>        </javac>    </target>    <!-- Add the WAR target here -->    <target name="war">        <!-- Create the build/war directory if it doesn't exist -->        <mkdir dir="build/war"/>        <!-- Create the WAR file -->        <war destfile="build/war/myweatherapp.war" webxml="src/main/webapp/WEB-INF/web.xml">            <!-- Include all the web resources from src/main/webapp -->            <fileset dir="src/main/webapp"/>            <!-- Include all compiled classes from the build/classes directory -->            <fileset dir="build/classes"/>            <!-- Include the libraries from src/main/webapp/WEB-INF/lib -->            <lib dir="src/main/webapp/WEB-INF/lib"/>        </war>    </target>    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">        <copy todir="${ant.library.dir}">            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>        </copy>        <unzip dest="${ant.library.dir}">            <patternset includes="jdtCompilerAdapter.jar"/>            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>        </unzip>    </target>    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>        <antcall target="build"/>    </target></project>